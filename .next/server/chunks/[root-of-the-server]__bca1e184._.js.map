{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/armandoponce/VSCodeApps/claude-code-workflows/todo-app/src/lib/db.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const db =\n  globalForPrisma.prisma ??\n  new PrismaClient({\n    log: ['query'],\n  })\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = db"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,KACX,gBAAgB,MAAM,IACtB,IAAI,6IAAY,CAAC;IACf,KAAK;QAAC;KAAQ;AAChB;AAEF,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///Users/armandoponce/VSCodeApps/claude-code-workflows/todo-app/src/app/api/todos/%5Bid%5D/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport { db } from '@/lib/db'\n\n// GET a single todo\nexport async function GET(\n  request: Request,\n  { params }: { params: Promise<{ id: string }> }\n) {\n  try {\n    const { id } = await params\n    const todoId = parseInt(id)\n\n    if (isNaN(todoId)) {\n      return NextResponse.json(\n        { error: 'Invalid todo ID' },\n        { status: 400 }\n      )\n    }\n\n    const todo = await db.todo.findUnique({\n      where: { id: todoId }\n    })\n\n    if (!todo) {\n      return NextResponse.json(\n        { error: 'Todo not found' },\n        { status: 404 }\n      )\n    }\n\n    return NextResponse.json(todo)\n  } catch (error) {\n    console.error('Error fetching todo:', error)\n    return NextResponse.json(\n      { error: 'Failed to fetch todo' },\n      { status: 500 }\n    )\n  }\n}\n\n// PUT update a todo\nexport async function PUT(\n  request: Request,\n  { params }: { params: Promise<{ id: string }> }\n) {\n  try {\n    const { id } = await params\n    const body = await request.json()\n    const todoId = parseInt(id)\n\n    if (isNaN(todoId)) {\n      return NextResponse.json(\n        { error: 'Invalid todo ID' },\n        { status: 400 }\n      )\n    }\n\n    // Check if todo exists\n    const existingTodo = await db.todo.findUnique({\n      where: { id: todoId }\n    })\n\n    if (!existingTodo) {\n      return NextResponse.json(\n        { error: 'Todo not found' },\n        { status: 404 }\n      )\n    }\n\n    // Update the todo\n    const updatedTodo = await db.todo.update({\n      where: { id: todoId },\n      data: {\n        ...(body.text !== undefined && { text: body.text }),\n        ...(body.completed !== undefined && { completed: body.completed }),\n        ...(body.order !== undefined && { order: body.order })\n      }\n    })\n\n    return NextResponse.json(updatedTodo)\n  } catch (error) {\n    console.error('Error updating todo:', error)\n    return NextResponse.json(\n      { error: 'Failed to update todo' },\n      { status: 500 }\n    )\n  }\n}\n\n// DELETE a todo\nexport async function DELETE(\n  request: Request,\n  { params }: { params: Promise<{ id: string }> }\n) {\n  try {\n    const { id } = await params\n    const todoId = parseInt(id)\n\n    if (isNaN(todoId)) {\n      return NextResponse.json(\n        { error: 'Invalid todo ID' },\n        { status: 400 }\n      )\n    }\n\n    // Check if todo exists\n    const existingTodo = await db.todo.findUnique({\n      where: { id: todoId }\n    })\n\n    if (!existingTodo) {\n      return NextResponse.json(\n        { error: 'Todo not found' },\n        { status: 404 }\n      )\n    }\n\n    // Delete the todo\n    await db.todo.delete({\n      where: { id: todoId }\n    })\n\n    return NextResponse.json({ message: 'Todo deleted successfully' })\n  } catch (error) {\n    console.error('Error deleting todo:', error)\n    return NextResponse.json(\n      { error: 'Failed to delete todo' },\n      { status: 500 }\n    )\n  }\n}"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;AAGO,eAAe,IACpB,OAAgB,EAChB,EAAE,MAAM,EAAuC;IAE/C,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;QACrB,MAAM,SAAS,SAAS;QAExB,IAAI,MAAM,SAAS;YACjB,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAkB,GAC3B;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,OAAO,MAAM,wHAAE,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,OAAO;gBAAE,IAAI;YAAO;QACtB;QAEA,IAAI,CAAC,MAAM;YACT,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAiB,GAC1B;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAuB,GAChC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,IACpB,OAAgB,EAChB,EAAE,MAAM,EAAuC;IAE/C,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;QACrB,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,SAAS,SAAS;QAExB,IAAI,MAAM,SAAS;YACjB,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAkB,GAC3B;gBAAE,QAAQ;YAAI;QAElB;QAEA,uBAAuB;QACvB,MAAM,eAAe,MAAM,wHAAE,CAAC,IAAI,CAAC,UAAU,CAAC;YAC5C,OAAO;gBAAE,IAAI;YAAO;QACtB;QAEA,IAAI,CAAC,cAAc;YACjB,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAiB,GAC1B;gBAAE,QAAQ;YAAI;QAElB;QAEA,kBAAkB;QAClB,MAAM,cAAc,MAAM,wHAAE,CAAC,IAAI,CAAC,MAAM,CAAC;YACvC,OAAO;gBAAE,IAAI;YAAO;YACpB,MAAM;gBACJ,GAAI,KAAK,IAAI,KAAK,aAAa;oBAAE,MAAM,KAAK,IAAI;gBAAC,CAAC;gBAClD,GAAI,KAAK,SAAS,KAAK,aAAa;oBAAE,WAAW,KAAK,SAAS;gBAAC,CAAC;gBACjE,GAAI,KAAK,KAAK,KAAK,aAAa;oBAAE,OAAO,KAAK,KAAK;gBAAC,CAAC;YACvD;QACF;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,OACpB,OAAgB,EAChB,EAAE,MAAM,EAAuC;IAE/C,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;QACrB,MAAM,SAAS,SAAS;QAExB,IAAI,MAAM,SAAS;YACjB,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAkB,GAC3B;gBAAE,QAAQ;YAAI;QAElB;QAEA,uBAAuB;QACvB,MAAM,eAAe,MAAM,wHAAE,CAAC,IAAI,CAAC,UAAU,CAAC;YAC5C,OAAO;gBAAE,IAAI;YAAO;QACtB;QAEA,IAAI,CAAC,cAAc;YACjB,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAiB,GAC1B;gBAAE,QAAQ;YAAI;QAElB;QAEA,kBAAkB;QAClB,MAAM,wHAAE,CAAC,IAAI,CAAC,MAAM,CAAC;YACnB,OAAO;gBAAE,IAAI;YAAO;QACtB;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA4B;IAClE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}